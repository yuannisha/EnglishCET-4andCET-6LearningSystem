{"version":3,"file":"reading.js","sources":["pages/reading/reading.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcmVhZGluZy9yZWFkaW5nLnZ1ZQ"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { onShow, onHide } from '@dcloudio/uni-app'\r\n\r\n/**\r\n * @description 当前选择的类别\r\n */\r\nconst currentCategory = ref('CET4')\r\n\r\n/**\r\n * @description 类别选项\r\n */\r\nconst categoryOptions = ref([\r\n  { value: 'CET4', label: '四级阅读' },\r\n  { value: 'CET6', label: '六级阅读' }\r\n])\r\n\r\n/**\r\n * @description 当前套题编号\r\n */\r\nconst currentSet = ref(1)\r\n\r\n/**\r\n * @description 总套数\r\n */\r\nconst totalSets = ref(0)\r\n\r\n/**\r\n * @description 题目Id\r\n */\r\nconst questionId = ref('')\r\n\r\n/**\r\n * @description 题目列表\r\n */\r\nconst questionList = ref([])\r\n\r\n/**\r\n * @description 用户答案\r\n */\r\nconst userAnswers = ref({})\r\n\r\n/**\r\n * @description 用户得分\r\n */\r\nconst userScore = ref(0)\r\n\r\n/**\r\n * @description 正确率\r\n */\r\nconst correctRate = ref(0)\r\n\r\n/**\r\n * @description 正确题目数量\r\n */\r\nconst correctCount = ref(0)\r\n\r\n/**\r\n * @description 是否显示答案\r\n */\r\nconst showAnswers = ref(false)\r\n\r\n/**\r\n * @description 是否已作答所有题目\r\n */\r\nconst hasAnsweredAll = ref(false)\r\n\r\n/**\r\n * @description 加载题目数据\r\n */\r\nconst loadQuestions = async () => {\r\n  try {\r\n    uni.showLoading({\r\n      title: '加载中...'\r\n    })\r\n    \r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getReadingQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        set_number: currentSet.value\r\n      }\r\n    })\r\n    console.log(\"result\",result)\r\n    \r\n    if (result.code === 0) {\r\n      questionList.value = result.data.list\r\n      totalSets.value = result.data.total_sets.total\r\n      questionId.value = questionList.value[0]._id\r\n      \r\n      // 重置答案\r\n      userAnswers.value = {}\r\n      showAnswers.value = false\r\n      hasAnsweredAll.value = false\r\n    } else {\r\n      uni.showToast({\r\n        title: result.msg || '加载失败',\r\n        icon: 'none'\r\n      })\r\n    }\r\n  } catch (e) {\r\n    console.error('加载题目失败:', e)\r\n    uni.showToast({\r\n      title: '加载失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 切换类别\r\n */\r\nconst handleCategoryChange = (category) => {\r\n  currentCategory.value = category\r\n  currentSet.value = 1\r\n  questionChange()\r\n  loadQuestions()\r\n}\r\n\r\n/**\r\n * @description 切换套题\r\n */\r\nconst questionChange = () => {\r\n  userAnswers.value = {}\r\n  showAnswers.value = false\r\n  correctCount.value = 0\r\n  correctRate.value = 0\r\n  userScore.value = 0\r\n  hasAnsweredAll.value = false\r\n}\r\n\r\n/**\r\n * @description 上一套题\r\n */\r\nconst prevSet = () => {\r\n  if (currentSet.value > 1) {\r\n    currentSet.value--\r\n    questionChange()\r\n    loadQuestions()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 下一套题\r\n */\r\nconst nextSet = () => {\r\n  if (currentSet.value < totalSets.value) {\r\n    currentSet.value++\r\n    questionChange()\r\n    loadQuestions()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 选择答案\r\n */\r\nconst selectAnswer = (questionNumber, answer) => {\r\n  if (showAnswers.value) {\r\n    uni.showToast({\r\n      title: '答案已提交，请勿重复作答',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  userAnswers.value[`${questionNumber}`] = answer\r\n  \r\n  // 检查是否所有题目都已作答\r\n  if (Object.keys(userAnswers.value).length === questionList.value[0].questions.length) {\r\n    hasAnsweredAll.value = true\r\n  } else {\r\n    hasAnsweredAll.value = false\r\n  }\r\n}\r\n\r\n/**\r\n * @description 提交答案\r\n */\r\nconst submitAnswers = async () => {\r\n  if (Object.keys(userAnswers.value).length === 0) {\r\n    uni.showToast({\r\n      title: '请先作答',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  \r\n  if (showAnswers.value) {\r\n    uni.showToast({\r\n      title: '答案已提交，请勿重复作答',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  \r\n  try {\r\n    // 计算得分和正确率\r\n    questionList.value[0].answers.forEach((answer, index) => {\r\n      if (userAnswers.value[`${index + 1}`] === answer.content) {\r\n        userScore.value += answer.score\r\n        correctCount.value++\r\n      }\r\n    })\r\n    \r\n    correctRate.value = Math.round((correctCount.value / questionList.value[0].questions.length) * 100)\r\n    \r\n    // 更新练习记录\r\n    const user_id = uni.getStorageSync('userInfo')._id\r\n    console.log(\"user_id\",user_id)  \r\n    console.log(\"questionId.value\",questionId.value)  \r\n    console.log(\"correctCount.value\",correctCount.value)  \r\n    console.log(\"correctRate.value\",correctRate.value)  \r\n    console.log(\"userScore.value\",userScore.value)    \r\n    \r\n    await uniCloud.callFunction({\r\n      name: 'saveAndUpdatePracticeRecord',\r\n      data: {\r\n        userId: user_id,\r\n        question_id: questionId.value,\r\n        practice_type: 'reading',\r\n        correctCount: correctCount.value,\r\n        correctRate: correctRate.value,\r\n        userScore: userScore.value\r\n      }\r\n    })\r\n    \r\n    showAnswers.value = true\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '提交失败',\r\n      icon: 'none'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 重新开始练习\r\n */\r\nconst restartPractice = () => {\r\n  uni.showModal({\r\n    title: '提示',\r\n    content: '确定要重新开始练习吗？',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        userAnswers.value = {}\r\n        correctCount.value = 0\r\n        correctRate.value = 0\r\n        userScore.value = 0\r\n        showAnswers.value = false\r\n        hasAnsweredAll.value = false\r\n        loadQuestions()\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * @description 重置答案\r\n */\r\nconst resetAnswers = () => {\r\n  uni.showModal({\r\n    title: '提示',\r\n    content: '确定要重置所有答案吗？',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        userAnswers.value = {}\r\n        showAnswers.value = false\r\n        hasAnsweredAll.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  if (!uni.getStorageSync('userInfo')) {\r\n    uni.showToast({\r\n      title: '请先登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    uni.navigateTo({\r\n      url: '/pages/login/login'\r\n    })\r\n  } else {\r\n    loadQuestions()\r\n  }\r\n})\r\n\r\nonShow(() => {\r\n  if (uni.getStorageSync('userInfo')) {\r\n    loadQuestions()\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <view class=\"container\">\r\n    <!-- 顶部类别选择 -->\r\n    <view class=\"category-selector\">\r\n      <view\r\n        class=\"category-item\"\r\n        v-for=\"item in categoryOptions\"\r\n        :key=\"item.value\"\r\n        :class=\"{ active: currentCategory === item.value }\"\r\n        @tap=\"handleCategoryChange(item.value)\"\r\n      >\r\n        {{ item.label }}\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 显示练习结果 -->\r\n    <view class=\"practice-result\" v-if=\"showAnswers\">\r\n      <text>正确率：{{ correctRate }}%</text>\r\n      <text>得分：{{ userScore }}</text>\r\n      <text>正确题目数量：{{ correctCount }}</text>\r\n      <button class=\"restart-btn\" @tap=\"restartPractice\">重新开始练习</button>\r\n    </view>\r\n\r\n    <!-- 套题导航 -->\r\n    <view class=\"set-navigation\">\r\n      <text class=\"set-info\">第 {{ currentSet }} 套 / 共 {{ totalSets }} 套</text>\r\n      <view class=\"set-actions\">\r\n        <button class=\"nav-btn\" @tap=\"prevSet\" :disabled=\"currentSet <= 1\">上一套</button>\r\n        <button class=\"nav-btn\" @tap=\"nextSet\" :disabled=\"currentSet >= totalSets\">下一套</button>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 阅读文章和题目内容 -->\r\n    <scroll-view class=\"question-content\" scroll-y>\r\n      <block v-if=\"questionList && questionList.length > 0\">\r\n        <!-- 阅读文章 -->\r\n        <view class=\"passage-content\">\r\n          <text class=\"passage-text\">{{ questionList[0].passage }}</text>\r\n        </view>\r\n\r\n        <!-- 问题列表 -->\r\n        <view class=\"questions\">\r\n          <view \r\n            class=\"question-item\" \r\n            v-for=\"(question, index) in questionList[0].questions\" \r\n            :key=\"index\"\r\n          >\r\n            <text class=\"question-number\">Question {{ index + 1 }}</text>\r\n            <text class=\"question-text\">{{ question.question }}</text>\r\n            \r\n            <!-- 选项列表 -->\r\n            <view class=\"options-list\">\r\n              <view\r\n                class=\"option-item\"\r\n                v-for=\"(content, key) in question.options\"\r\n                :key=\"key\"\r\n                :class=\"{\r\n                  active: userAnswers[`${index + 1}`] === key,\r\n                  correct: showAnswers && questionList[0].answers[index].content === key,\r\n                  wrong: showAnswers && userAnswers[`${index + 1}`] === key && questionList[0].answers[index].content !== key\r\n                }\"\r\n                @tap=\"selectAnswer(index + 1, key)\"\r\n              >\r\n                <text class=\"option-key\">{{ key }}</text>\r\n                <text class=\"option-content\">{{ content }}</text>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </block>\r\n      <view v-else class=\"empty-tip\">\r\n        <text>暂无题目数据</text>\r\n      </view>\r\n    </scroll-view>\r\n\r\n    <!-- 底部控制栏 -->\r\n    <view class=\"fixed-bottom\">\r\n      <view class=\"control-actions\">\r\n        <button\r\n          class=\"control-btn\"\r\n          @tap=\"resetAnswers\"\r\n          :disabled=\"!Object.keys(userAnswers).length\"\r\n        >\r\n          重置答案\r\n        </button>\r\n        <button\r\n          class=\"submit-btn\"\r\n          @tap=\"submitAnswers\"\r\n          :disabled=\"!hasAnsweredAll || showAnswers\"\r\n        >\r\n          提交答案\r\n        </button>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<style>\r\n.container {\r\n  padding: 30rpx;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.category-selector {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.category-item {\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 20rpx 0;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  border-radius: 10rpx;\r\n  margin: 0 10rpx;\r\n}\r\n\r\n.category-item.active {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.practice-result {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 30rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.practice-result text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.restart-btn {\r\n  margin-top: 20rpx;\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.set-navigation {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.set-info {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.set-actions {\r\n  display: flex;\r\n  gap: 20rpx;\r\n}\r\n\r\n.nav-btn {\r\n  font-size: 24rpx;\r\n  padding: 10rpx 30rpx;\r\n}\r\n\r\n.question-content {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 160rpx;\r\n}\r\n\r\n.passage-content {\r\n  margin-bottom: 40rpx;\r\n  padding: 20rpx;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10rpx;\r\n}\r\n\r\n.passage-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.questions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 40rpx;\r\n}\r\n\r\n.question-item {\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 30rpx;\r\n}\r\n\r\n.question-number {\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 10rpx;\r\n  display: block;\r\n}\r\n\r\n.question-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n  line-height: 1.6;\r\n}\r\n\r\n.options-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.option-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.option-item.active {\r\n  background-color: #4095E5;\r\n  border-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.option-item.correct {\r\n  background-color: #52c41a;\r\n  border-color: #52c41a;\r\n  color: #fff;\r\n}\r\n\r\n.option-item.wrong {\r\n  background-color: #ff4d4f;\r\n  border-color: #ff4d4f;\r\n  color: #fff;\r\n}\r\n\r\n.option-key {\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n  margin-right: 20rpx;\r\n}\r\n\r\n.option-content {\r\n  font-size: 28rpx;\r\n  flex: 1;\r\n}\r\n\r\n.fixed-bottom {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #fff;\r\n  padding: 20rpx 30rpx;\r\n  box-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.control-actions {\r\n  display: flex;\r\n  gap: 20rpx;\r\n}\r\n\r\n.control-btn {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  background-color: #f5f5f5;\r\n  color: #666;\r\n}\r\n\r\n.submit-btn {\r\n  flex: 2;\r\n  font-size: 28rpx;\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.empty-tip {\r\n  text-align: center;\r\n  padding: 100rpx 0;\r\n  color: #999;\r\n  font-size: 28rpx;\r\n}\r\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/yulidanprogram/second/EnglishCET-4andCET-6LearningSystem/pages/reading/reading.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","uniCloud","onMounted","onShow","MiniProgramPage"],"mappings":"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"}