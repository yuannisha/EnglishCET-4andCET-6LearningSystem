{"version":3,"file":"writing.js","sources":["pages/writing/writing.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvd3JpdGluZy93cml0aW5nLnZ1ZQ"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { onShow, onHide } from '@dcloudio/uni-app'\r\n\r\n/**\r\n * @description 当前选择的类别\r\n */\r\nconst currentCategory = ref('CET4')\r\n\r\n/**\r\n * @description 类别选项\r\n */\r\nconst categoryOptions = ref([\r\n  { value: 'CET4', label: '四级写作' },\r\n  { value: 'CET6', label: '六级写作' }\r\n])\r\n\r\n/**\r\n * @description 当前套题编号\r\n */\r\nconst currentSet = ref(1)\r\n\r\n/**\r\n * @description 总套数\r\n */\r\nconst totalSets = ref(0)\r\n\r\n/**\r\n * @description 题目Id\r\n */\r\nconst questionId = ref('')\r\n\r\n/**\r\n * @description 题目列表\r\n */\r\nconst questionList = ref([])\r\n\r\n/**\r\n * @description 用户答案\r\n */\r\nconst userAnswer = ref('')\r\n\r\n/**\r\n * @description 用户得分\r\n */\r\nconst userScore = ref(0)\r\n\r\n/**\r\n * @description 是否显示参考答案\r\n */\r\nconst showReference = ref(false)\r\n\r\n/**\r\n * @description 当前字数\r\n */\r\nconst currentWordCount = ref(0)\r\n\r\n/**\r\n * @description 加载题目数据\r\n */\r\nconst loadQuestions = async () => {\r\n  try {\r\n    uni.showLoading({\r\n      title: '加载中...'\r\n    })\r\n    \r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getWritingQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        set_number: currentSet.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      questionList.value = result.data.list\r\n      totalSets.value = result.data.total_sets.total\r\n      questionId.value = questionList.value[0]._id\r\n      \r\n      // 重置答案\r\n      userAnswer.value = ''\r\n      showReference.value = false\r\n      currentWordCount.value = 0\r\n    } else {\r\n      uni.showToast({\r\n        title: result.msg || '加载失败',\r\n        icon: 'none'\r\n      })\r\n    }\r\n  } catch (e) {\r\n    console.error('加载题目失败:', e)\r\n    uni.showToast({\r\n      title: '加载失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 切换类别\r\n */\r\nconst handleCategoryChange = (category) => {\r\n  currentCategory.value = category\r\n  currentSet.value = 1\r\n  questionChange()\r\n  loadQuestions()\r\n}\r\n\r\n/**\r\n * @description 切换套题\r\n */\r\nconst questionChange = () => {\r\n  userAnswer.value = ''\r\n  showReference.value = false\r\n  userScore.value = 0\r\n  currentWordCount.value = 0\r\n}\r\n\r\n/**\r\n * @description 上一套题\r\n */\r\nconst prevSet = () => {\r\n  if (currentSet.value > 1) {\r\n    currentSet.value--\r\n    questionChange()\r\n    loadQuestions()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 下一套题\r\n */\r\nconst nextSet = () => {\r\n  if (currentSet.value < totalSets.value) {\r\n    currentSet.value++\r\n    questionChange()\r\n    loadQuestions()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 更新字数统计\r\n */\r\nconst updateWordCount = (e) => {\r\n  const text = e.detail.value\r\n  userAnswer.value = text\r\n  // 统计英文单词数（以空格分隔）\r\n  currentWordCount.value = text.trim() ? text.trim().split(/\\s+/).length : 0\r\n}\r\n\r\n/**\r\n * @description 检查输入是否为英文\r\n */\r\nconst checkInput = (e) => {\r\n  const text = e.detail.value\r\n  // 检查是否包含非英文字符（允许标点符号和空格）\r\n  if (/[^\\x00-\\xff\\s\\p{P}]/u.test(text)) {\r\n    uni.showToast({\r\n      title: '请输入英文',\r\n      icon: 'none'\r\n    })\r\n    // 移除非英文字符\r\n    userAnswer.value = text.replace(/[^\\x00-\\xff\\s\\p{P}]/gu, '')\r\n    return\r\n  }\r\n}\r\n\r\n/**\r\n * @description 提交答案\r\n */\r\nconst submitAnswer = async () => {\r\n  if (!userAnswer.value.trim()) {\r\n    uni.showToast({\r\n      title: '请先完成写作',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  \r\n  const wordLimit = questionList.value[0].word_limit\r\n  if (currentWordCount.value < wordLimit.min || currentWordCount.value > wordLimit.max) {\r\n    uni.showToast({\r\n      title: `字数应在${wordLimit.min}-${wordLimit.max}之间`,\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  \r\n  try {\r\n    // 模拟评分：在满分基础上随机减去0-20分\r\n    const maxScore = questionList.value[0].score\r\n    userScore.value = Math.round((maxScore - Math.random() * 20) * 10) / 10\r\n    \r\n    // 更新练习记录\r\n    const user_id = uni.getStorageSync('userInfo')._id\r\n    \r\n    await uniCloud.callFunction({\r\n      name: 'saveAndUpdatePracticeRecord',\r\n      data: {\r\n        userId: user_id,\r\n        question_id: questionId.value,\r\n        practice_type: 'writing',\r\n        userScore: userScore.value\r\n      }\r\n    })\r\n    \r\n    showReference.value = true\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '提交失败',\r\n      icon: 'none'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 重新开始练习\r\n */\r\nconst restartPractice = () => {\r\n  uni.showModal({\r\n    title: '提示',\r\n    content: '确定要重新开始练习吗？',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        userAnswer.value = ''\r\n        userScore.value = 0\r\n        showReference.value = false\r\n        currentWordCount.value = 0\r\n        loadQuestions()\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  if (!uni.getStorageSync('userInfo')) {\r\n    uni.showToast({\r\n      title: '请先登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    uni.navigateTo({\r\n      url: '/pages/login/login'\r\n    })\r\n  } else {\r\n    loadQuestions()\r\n  }\r\n})\r\n\r\nonShow(() => {\r\n  if (uni.getStorageSync('userInfo')) {\r\n    loadQuestions()\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <view class=\"container\">\r\n    <!-- 顶部类别选择 -->\r\n    <view class=\"category-selector\">\r\n      <view\r\n        class=\"category-item\"\r\n        v-for=\"item in categoryOptions\"\r\n        :key=\"item.value\"\r\n        :class=\"{ active: currentCategory === item.value }\"\r\n        @tap=\"handleCategoryChange(item.value)\"\r\n      >\r\n        {{ item.label }}\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 显示练习结果 -->\r\n    <view class=\"practice-result\" v-if=\"showReference\">\r\n      <text>得分：{{ userScore }}</text>\r\n      <button class=\"restart-btn\" @tap=\"restartPractice\">重新开始练习</button>\r\n    </view>\r\n\r\n    <!-- 套题导航 -->\r\n    <view class=\"set-navigation\">\r\n      <text class=\"set-info\">第 {{ currentSet }} 套 / 共 {{ totalSets }} 套</text>\r\n      <view class=\"set-actions\">\r\n        <button class=\"nav-btn\" @tap=\"prevSet\" :disabled=\"currentSet <= 1\">上一套</button>\r\n        <button class=\"nav-btn\" @tap=\"nextSet\" :disabled=\"currentSet >= totalSets\">下一套</button>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 写作内容区域 -->\r\n    <scroll-view class=\"writing-content\" scroll-y>\r\n      <block v-if=\"questionList && questionList.length > 0\">\r\n        <!-- 写作题目 -->\r\n        <view class=\"writing-title\">\r\n          <text class=\"title-text\">{{ questionList[0].title }}</text>\r\n        </view>\r\n\r\n        <view class=\"writing-description\">\r\n          <text class=\"description-text\">{{ questionList[0].description }}</text>\r\n          <text class=\"word-limit\">\r\n            字数要求：{{ questionList[0].word_limit.min }}-{{ questionList[0].word_limit.max }} 词\r\n          </text>\r\n        </view>\r\n\r\n        <!-- 写作区域 -->\r\n        <view class=\"writing-area\">\r\n          <textarea\r\n            class=\"writing-input\"\r\n            v-model=\"userAnswer\"\r\n            :disabled=\"showReference\"\r\n            placeholder=\"请用英文写作...\"\r\n            @input=\"updateWordCount\"\r\n            @blur=\"checkInput\"\r\n            maxlength=\"-1\" \r\n          />\r\n          <text class=\"word-count\" :class=\"{ \r\n            warning: currentWordCount < questionList[0].word_limit.min || \r\n                     currentWordCount > questionList[0].word_limit.max \r\n          }\">\r\n            当前字数：{{ currentWordCount }} 词\r\n          </text>\r\n        </view>\r\n\r\n        <!-- 参考范文 -->\r\n        <view class=\"reference-answer\" v-if=\"showReference\">\r\n          <text class=\"reference-title\">参考范文：</text>\r\n          <text class=\"reference-content\">{{ questionList[0].reference_answer }}</text>\r\n        </view>\r\n      </block>\r\n      <view v-else class=\"empty-tip\">\r\n        <text>暂无题目数据</text>\r\n      </view>\r\n    </scroll-view>\r\n\r\n    <!-- 底部控制栏 -->\r\n    <view class=\"fixed-bottom\">\r\n      <button\r\n        class=\"submit-btn\"\r\n        @tap=\"submitAnswer\"\r\n        :disabled=\"showReference\"\r\n      >\r\n        提交答案\r\n      </button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<style>\r\n.container {\r\n  padding: 30rpx;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.category-selector {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.category-item {\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 20rpx 0;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  border-radius: 10rpx;\r\n  margin: 0 10rpx;\r\n}\r\n\r\n.category-item.active {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.practice-result {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 30rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.practice-result text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.restart-btn {\r\n  margin-top: 20rpx;\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.set-navigation {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.set-info {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.set-actions {\r\n  display: flex;\r\n  gap: 20rpx;\r\n}\r\n\r\n.nav-btn {\r\n  font-size: 24rpx;\r\n  padding: 10rpx 30rpx;\r\n}\r\n\r\n.writing-content {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 120rpx;\r\n}\r\n\r\n.writing-title {\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.title-text {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  line-height: 1.6;\r\n}\r\n\r\n.writing-description {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.description-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.6;\r\n  display: block;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.word-limit {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  display: block;\r\n}\r\n\r\n.writing-area {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.writing-input {\r\n  width: 100%;\r\n  height: 400rpx;\r\n  padding: 20rpx;\r\n  font-size: 28rpx;\r\n  line-height: 1.6;\r\n  color: #333;\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.word-count {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  text-align: right;\r\n  display: block;\r\n  margin-top: 10rpx;\r\n}\r\n\r\n.word-count.warning {\r\n  color: #ff4d4f;\r\n}\r\n\r\n.reference-answer {\r\n  margin-top: 40rpx;\r\n  padding-top: 40rpx;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.reference-title {\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.reference-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n}\r\n\r\n.fixed-bottom {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #fff;\r\n  padding: 20rpx 30rpx;\r\n  box-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.submit-btn {\r\n  width: 100%;\r\n  font-size: 28rpx;\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.empty-tip {\r\n  text-align: center;\r\n  padding: 100rpx 0;\r\n  color: #999;\r\n  font-size: 28rpx;\r\n}\r\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/yulidanprogram/second/EnglishCET-4andCET-6LearningSystem/pages/writing/writing.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","uniCloud","onMounted","onShow","MiniProgramPage"],"mappings":"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"}