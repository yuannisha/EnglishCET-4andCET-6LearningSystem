{"version":3,"file":"mock-exam.js","sources":["pages/practice/mock-exam/mock-exam.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJhY3RpY2UvbW9jay1leGFtL21vY2stZXhhbS52dWU"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\n/**\r\n * @description 考试时间（分钟）\r\n */\r\nconst EXAM_TIME = 130 // 标准四六级考试时间\r\n\r\n/**\r\n * @description 考试状态\r\n */\r\nconst examStatus = ref('ready') // ready-准备开始, ongoing-考试中, finished-已结束\r\n\r\n/**\r\n * @description 剩余时间（秒）\r\n */\r\nconst remainingTime = ref(EXAM_TIME * 60)\r\n\r\n/**\r\n * @description 当前选择的类别\r\n */\r\nconst currentCategory = ref('CET4')\r\n\r\n/**\r\n * @description 类别选项\r\n */\r\nconst categoryOptions = ref([\r\n  { value: 'CET4', label: '四级考试' },\r\n  { value: 'CET6', label: '六级考试' }\r\n])\r\n\r\n/**\r\n * @description 考试题目数据\r\n */\r\nconst examData = ref({\r\n  listening: null,\r\n  reading: null,\r\n  translation: null,\r\n  writing: null\r\n})\r\n\r\n/**\r\n * @description 当前考试部分\r\n */\r\nconst currentSection = ref('listening') // listening, reading, translation, writing\r\n\r\n/**\r\n * @description 用户答案\r\n */\r\nconst userAnswers = ref({\r\n  listening: {},\r\n  reading: {},\r\n  translation: '',\r\n  writing: ''\r\n})\r\n\r\n/**\r\n * @description 分数统计\r\n */\r\nconst scores = ref({\r\n  listening: 0,\r\n  reading: 0,\r\n  translation: 0,\r\n  writing: 0,\r\n  total: 0\r\n})\r\n\r\n/**\r\n * @description 计时器\r\n */\r\nlet timer = null\r\n\r\n/**\r\n * @description 音频播放状态\r\n */\r\nconst audioPlaying = ref(false)\r\nconst audioContext = ref(null)\r\n\r\n/**\r\n * @description 加载考试题目\r\n */\r\nconst loadExamQuestions = async () => {\r\n  try {\r\n    uni.showLoading({\r\n      title: '加载中...'\r\n    })\r\n    \r\n    // 加载听力题目\r\n    const listeningRes = await uniCloud.callFunction({\r\n      name: 'getListeningQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        set_number: 1\r\n      }\r\n    })\r\n    \r\n    // 加载阅读题目\r\n    const readingRes = await uniCloud.callFunction({\r\n      name: 'getReadingQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        set_number: 1\r\n      }\r\n    })\r\n    \r\n    // 加载翻译题目\r\n    const translationRes = await uniCloud.callFunction({\r\n      name: 'getTranslationQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        set_number: 1\r\n      }\r\n    })\r\n    \r\n    // 加载写作题目\r\n    const writingRes = await uniCloud.callFunction({\r\n      name: 'getWritingQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        set_number: 1\r\n      }\r\n    })\r\n    \r\n    if (listeningRes.result.code === 0 && \r\n        readingRes.result.code === 0 && \r\n        translationRes.result.code === 0 && \r\n        writingRes.result.code === 0) {\r\n      examData.value = {\r\n        listening: listeningRes.result.data.list[0],\r\n        reading: readingRes.result.data.list[0],\r\n        translation: translationRes.result.data.list[0],\r\n        writing: writingRes.result.data.list[0]\r\n      }\r\n    } else {\r\n      throw new Error('加载题目失败')\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载题目失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 开始考试\r\n */\r\nconst startExam = () => {\r\n  examStatus.value = 'ongoing'\r\n  startTimer()\r\n  playListeningAudio()\r\n}\r\n\r\n/**\r\n * @description 开始计时\r\n */\r\nconst startTimer = () => {\r\n  timer = setInterval(() => {\r\n    if (remainingTime.value > 0) {\r\n      remainingTime.value--\r\n    } else {\r\n      finishExam()\r\n    }\r\n  }, 1000)\r\n}\r\n\r\n/**\r\n * @description 播放听力音频\r\n */\r\nconst playListeningAudio = () => {\r\n  if (audioPlaying.value) return\r\n  \r\n  audioContext.value = uni.createInnerAudioContext()\r\n  audioContext.value.src = examData.value.listening.audio_file\r\n  audioContext.value.autoplay = true\r\n  \r\n  audioContext.value.onPlay(() => {\r\n    audioPlaying.value = true\r\n  })\r\n  \r\n  audioContext.value.onEnded(() => {\r\n    audioPlaying.value = false\r\n  })\r\n  \r\n  audioContext.value.onError(() => {\r\n    audioPlaying.value = false\r\n    uni.showToast({\r\n      title: '音频播放失败',\r\n      icon: 'none'\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * @description 切换考试部分\r\n */\r\nconst switchSection = (section) => {\r\n  if (section === currentSection.value) return\r\n  \r\n  // 停止音频播放\r\n  if (audioContext.value) {\r\n    audioContext.value.stop()\r\n    audioContext.value.destroy()\r\n  }\r\n  \r\n  currentSection.value = section\r\n}\r\n\r\n/**\r\n * @description 选择答案（听力/阅读）\r\n */\r\nconst selectAnswer = (section, questionNumber, answer) => {\r\n  userAnswers.value[section][questionNumber] = answer\r\n}\r\n\r\n/**\r\n * @description 更新文本答案（翻译/写作）\r\n */\r\nconst updateTextAnswer = (section, text) => {\r\n  userAnswers.value[section] = text\r\n}\r\n\r\n/**\r\n * @description 检查字数限制（写作）\r\n */\r\nconst checkWordLimit = () => {\r\n  const wordCount = userAnswers.value.writing.split(/\\s+/).filter(Boolean).length\r\n  const limit = examData.value.writing.word_limit\r\n  \r\n  return wordCount >= limit.min && wordCount <= limit.max\r\n}\r\n\r\n/**\r\n * @description 结束考试\r\n */\r\nconst finishExam = async () => {\r\n  clearInterval(timer)\r\n  examStatus.value = 'finished'\r\n  \r\n  try {\r\n    uni.showLoading({\r\n      title: '正在评分...'\r\n    })\r\n    \r\n    // 计算听力分数\r\n    examData.value.listening.answers.forEach(answer => {\r\n      if (userAnswers.value.listening[answer.key] === answer.content) {\r\n        scores.value.listening += answer.score\r\n      }\r\n    })\r\n    \r\n    // 计算阅读分数\r\n    examData.value.reading.answers.forEach(answer => {\r\n      if (userAnswers.value.reading[answer.question_number] === answer.correct_answer) {\r\n        scores.value.reading += answer.score\r\n      }\r\n    })\r\n    \r\n    // 翻译和写作使用模拟评分\r\n    scores.value.translation = Math.round((examData.value.translation.score - Math.random() * 5) * 10) / 10\r\n    scores.value.writing = Math.round((examData.value.writing.score - Math.random() * 10) * 10) / 10\r\n    \r\n    // 计算总分\r\n    scores.value.total = Math.round((\r\n      scores.value.listening + \r\n      scores.value.reading + \r\n      scores.value.translation + \r\n      scores.value.writing\r\n    ) * 10) / 10\r\n    \r\n    // 保存考试记录\r\n    await uniCloud.callFunction({\r\n      name: 'saveAndUpdatePracticeRecord',\r\n      data: {\r\n        userId: uni.getStorageSync('userInfo')._id,\r\n        question_id: examData.value.listening._id, // 使用听力题目ID作为考试ID\r\n        question_type: 'mock',\r\n        correctCount: 0, // 模拟考试不计算正确题目数\r\n        correctRate: 0, // 模拟考试不计算正确率\r\n        userScore: scores.value.total\r\n      }\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '评分失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 重新开始\r\n */\r\nconst restart = () => {\r\n  examStatus.value = 'ready'\r\n  remainingTime.value = EXAM_TIME * 60\r\n  currentSection.value = 'listening'\r\n  userAnswers.value = {\r\n    listening: {},\r\n    reading: {},\r\n    translation: '',\r\n    writing: ''\r\n  }\r\n  scores.value = {\r\n    listening: 0,\r\n    reading: 0,\r\n    translation: 0,\r\n    writing: 0,\r\n    total: 0\r\n  }\r\n  loadExamQuestions()\r\n}\r\n\r\n/**\r\n * @description 格式化时间\r\n */\r\nconst formatTime = (seconds) => {\r\n  const hours = Math.floor(seconds / 3600)\r\n  const minutes = Math.floor((seconds % 3600) / 60)\r\n  const remainingSeconds = seconds % 60\r\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`\r\n}\r\n\r\nonMounted(() => {\r\n  if (!uni.getStorageSync('userInfo')) {\r\n    uni.showToast({\r\n      title: '请先登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    uni.navigateTo({\r\n      url: '/pages/login/login'\r\n    })\r\n  } else {\r\n    loadExamQuestions()\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <view class=\"container\">\r\n    <!-- 准备开始 -->\r\n    <view class=\"ready-card\" v-if=\"examStatus === 'ready'\">\r\n      <view class=\"category-selector\">\r\n        <view \r\n          class=\"category-item\" \r\n          v-for=\"item in categoryOptions\" \r\n          :key=\"item.value\"\r\n          :class=\"{ active: currentCategory === item.value }\"\r\n          @tap=\"currentCategory = item.value\"\r\n        >\r\n          {{ item.label }}\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"exam-info\">\r\n        <text class=\"title\">模拟考试</text>\r\n        <view class=\"info-item\">\r\n          <text class=\"label\">考试时长：</text>\r\n          <text class=\"value\">{{ EXAM_TIME }}分钟</text>\r\n        </view>\r\n        <view class=\"info-item\">\r\n          <text class=\"label\">总分：</text>\r\n          <text class=\"value\">710分</text>\r\n        </view>\r\n        <view class=\"section-list\">\r\n          <view class=\"section-item\">\r\n            <text class=\"section-name\">听力</text>\r\n            <text class=\"section-score\">249分</text>\r\n          </view>\r\n          <view class=\"section-item\">\r\n            <text class=\"section-name\">阅读</text>\r\n            <text class=\"section-score\">249分</text>\r\n          </view>\r\n          <view class=\"section-item\">\r\n            <text class=\"section-name\">翻译</text>\r\n            <text class=\"section-score\">106.5分</text>\r\n          </view>\r\n          <view class=\"section-item\">\r\n            <text class=\"section-name\">写作</text>\r\n            <text class=\"section-score\">106.5分</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <button class=\"btn primary\" @tap=\"startExam\">开始考试</button>\r\n    </view>\r\n    \r\n    <!-- 考试中 -->\r\n    <view class=\"exam-content\" v-else-if=\"examStatus === 'ongoing'\">\r\n      <!-- 顶部状态栏 -->\r\n      <view class=\"exam-header\">\r\n        <text class=\"timer\">剩余时间：{{ formatTime(remainingTime) }}</text>\r\n        <view class=\"section-tabs\">\r\n          <view \r\n            class=\"tab-item\"\r\n            v-for=\"(label, section) in { listening: '听力', reading: '阅读', translation: '翻译', writing: '写作' }\"\r\n            :key=\"section\"\r\n            :class=\"{ active: currentSection === section }\"\r\n            @tap=\"switchSection(section)\"\r\n          >\r\n            {{ label }}\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <!-- 听力部分 -->\r\n      <scroll-view \r\n        class=\"section-content\" \r\n        scroll-y \r\n        v-if=\"currentSection === 'listening' && examData.listening\"\r\n      >\r\n        <view class=\"listening-section\">\r\n          <view \r\n            class=\"question-group\" \r\n            v-for=\"(section, index) in examData.listening.question_content\" \r\n            :key=\"index\"\r\n          >\r\n            <text class=\"section-title\">{{ section.section_name }}</text>\r\n            <text class=\"section-desc\">{{ section.description }}</text>\r\n            \r\n            <view \r\n              class=\"question-item\" \r\n              v-for=\"question in section.questions\" \r\n              :key=\"question.description1\"\r\n            >\r\n              <text class=\"question-title\">{{ question.description1 }}</text>\r\n              <view class=\"options\">\r\n                <view \r\n                  class=\"option-item\"\r\n                  v-for=\"(content, key) in question.options.content\"\r\n                  :key=\"key\"\r\n                  :class=\"{ active: userAnswers.listening[question.tips] === key }\"\r\n                  @tap=\"selectAnswer('listening', question.tips, key)\"\r\n                >\r\n                  <text class=\"option-key\">{{ key }}</text>\r\n                  <text class=\"option-content\">{{ content }}</text>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </scroll-view>\r\n      \r\n      <!-- 阅读部分 -->\r\n      <scroll-view \r\n        class=\"section-content\" \r\n        scroll-y \r\n        v-if=\"currentSection === 'reading' && examData.reading\"\r\n      >\r\n        <view class=\"reading-section\">\r\n          <view class=\"passage\">\r\n            <text class=\"passage-title\">{{ examData.reading.little_title }}</text>\r\n            <text class=\"passage-content\">{{ examData.reading.passage }}</text>\r\n          </view>\r\n          \r\n          <view class=\"questions\">\r\n            <view \r\n              class=\"question-item\"\r\n              v-for=\"question in examData.reading.questions\"\r\n              :key=\"question.question_number\"\r\n            >\r\n              <text class=\"question-title\">{{ question.question_number }}. {{ question.question }}</text>\r\n              <view class=\"options\">\r\n                <view \r\n                  class=\"option-item\"\r\n                  v-for=\"(content, key) in question.options\"\r\n                  :key=\"key\"\r\n                  :class=\"{ active: userAnswers.reading[question.question_number] === key }\"\r\n                  @tap=\"selectAnswer('reading', question.question_number, key)\"\r\n                >\r\n                  <text class=\"option-key\">{{ key }}</text>\r\n                  <text class=\"option-content\">{{ content }}</text>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </scroll-view>\r\n      \r\n      <!-- 翻译部分 -->\r\n      <scroll-view \r\n        class=\"section-content\" \r\n        scroll-y \r\n        v-if=\"currentSection === 'translation' && examData.translation\"\r\n      >\r\n        <view class=\"translation-section\">\r\n          <text class=\"section-title\">{{ examData.translation.little_title }}</text>\r\n          <view class=\"original-text\">\r\n            <text class=\"text-label\">原文：</text>\r\n            <text class=\"text-content\">{{ examData.translation.original_text }}</text>\r\n          </view>\r\n          \r\n          <view class=\"translation-area\">\r\n            <text class=\"text-label\">译文：</text>\r\n            <textarea\r\n              class=\"translation-input\"\r\n              v-model=\"userAnswers.translation\"\r\n              placeholder=\"请输入英文翻译...\"\r\n              maxlength=\"-1\"\r\n            />\r\n          </view>\r\n        </view>\r\n      </scroll-view>\r\n      \r\n      <!-- 写作部分 -->\r\n      <scroll-view \r\n        class=\"section-content\" \r\n        scroll-y \r\n        v-if=\"currentSection === 'writing' && examData.writing\"\r\n      >\r\n        <view class=\"writing-section\">\r\n          <text class=\"section-title\">{{ examData.writing.little_title }}</text>\r\n          <view class=\"writing-info\">\r\n            <text class=\"writing-title\">{{ examData.writing.title }}</text>\r\n            <text class=\"word-limit\">\r\n              字数要求：{{ examData.writing.word_limit.min }}-{{ examData.writing.word_limit.max }}\r\n            </text>\r\n          </view>\r\n          \r\n          <textarea\r\n            class=\"writing-input\"\r\n            v-model=\"userAnswers.writing\"\r\n            placeholder=\"请输入作文内容...\"\r\n            maxlength=\"-1\"\r\n          />\r\n        </view>\r\n      </scroll-view>\r\n      \r\n      <!-- 底部按钮 -->\r\n      <view class=\"exam-footer\">\r\n        <button \r\n          class=\"btn primary\" \r\n          @tap=\"finishExam\"\r\n          :disabled=\"!userAnswers.writing && currentSection === 'writing'\"\r\n        >\r\n          交卷\r\n        </button>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 考试结束 -->\r\n    <view class=\"result-card\" v-else>\r\n      <view class=\"result-title\">考试结束</view>\r\n      <view class=\"result-info\">\r\n        <view class=\"total-score\">\r\n          <text class=\"score-label\">总分</text>\r\n          <text class=\"score-value\">{{ scores.total }}</text>\r\n        </view>\r\n        \r\n        <view class=\"section-scores\">\r\n          <view class=\"score-item\">\r\n            <text class=\"section-name\">听力</text>\r\n            <text class=\"section-score\">{{ scores.listening }}</text>\r\n          </view>\r\n          <view class=\"score-item\">\r\n            <text class=\"section-name\">阅读</text>\r\n            <text class=\"section-score\">{{ scores.reading }}</text>\r\n          </view>\r\n          <view class=\"score-item\">\r\n            <text class=\"section-name\">翻译</text>\r\n            <text class=\"section-score\">{{ scores.translation }}</text>\r\n          </view>\r\n          <view class=\"score-item\">\r\n            <text class=\"section-name\">写作</text>\r\n            <text class=\"section-score\">{{ scores.writing }}</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"result-actions\">\r\n        <button class=\"btn\" @tap=\"restart\">重新开始</button>\r\n        <button class=\"btn primary\" @tap=\"switchSection('listening')\">查看详情</button>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<style>\r\n.container {\r\n  padding: 30rpx;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n}\r\n\r\n.ready-card,\r\n.result-card {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 40rpx;\r\n}\r\n\r\n.category-selector {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.category-item {\r\n  padding: 20rpx 40rpx;\r\n  margin: 0 20rpx;\r\n  border-radius: 10rpx;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.category-item.active {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.exam-info {\r\n  text-align: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.title {\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.info-item {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.label {\r\n  color: #666;\r\n  font-size: 28rpx;\r\n}\r\n\r\n.value {\r\n  color: #333;\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.section-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-top: 30rpx;\r\n}\r\n\r\n.section-item {\r\n  width: 45%;\r\n  background-color: #f8f8f8;\r\n  padding: 20rpx;\r\n  border-radius: 10rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.section-name {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  display: block;\r\n}\r\n\r\n.section-score {\r\n  font-size: 32rpx;\r\n  color: #333;\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-top: 10rpx;\r\n}\r\n\r\n.exam-header {\r\n  background-color: #fff;\r\n  padding: 20rpx;\r\n  border-radius: 20rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.timer {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.section-tabs {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.tab-item {\r\n  padding: 20rpx 0;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  position: relative;\r\n}\r\n\r\n.tab-item.active {\r\n  color: #4095E5;\r\n}\r\n\r\n.tab-item.active::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -2rpx;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 40rpx;\r\n  height: 4rpx;\r\n  background-color: #4095E5;\r\n}\r\n\r\n.section-content {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 120rpx;\r\n  height: calc(100vh - 300rpx);\r\n}\r\n\r\n.listening-section,\r\n.reading-section,\r\n.translation-section,\r\n.writing-section {\r\n  padding-bottom: 40rpx;\r\n}\r\n\r\n.section-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.section-desc {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.question-item {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.question-title {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.options {\r\n  margin-left: 40rpx;\r\n}\r\n\r\n.option-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 20rpx;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.option-item.active {\r\n  background-color: #4095E5;\r\n  border-color: #4095E5;\r\n}\r\n\r\n.option-item.active text {\r\n  color: #fff;\r\n}\r\n\r\n.option-key {\r\n  width: 60rpx;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n}\r\n\r\n.option-content {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.5;\r\n}\r\n\r\n.passage {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.passage-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.passage-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n  display: block;\r\n}\r\n\r\n.translation-area,\r\n.writing-info {\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.text-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.text-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n  display: block;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.translation-input,\r\n.writing-input {\r\n  width: 100%;\r\n  height: 400rpx;\r\n  background-color: #f8f8f8;\r\n  border-radius: 10rpx;\r\n  padding: 20rpx;\r\n  font-size: 28rpx;\r\n  line-height: 1.8;\r\n}\r\n\r\n.writing-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.word-limit {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n}\r\n\r\n.exam-footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  padding: 20rpx 30rpx;\r\n  box-shadow: 0 -2rpx 10rpx rgba(0,0,0,0.05);\r\n}\r\n\r\n.result-title {\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.total-score {\r\n  text-align: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.score-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  display: block;\r\n  margin-bottom: 10rpx;\r\n}\r\n\r\n.score-value {\r\n  font-size: 64rpx;\r\n  color: #4095E5;\r\n  font-weight: bold;\r\n}\r\n\r\n.section-scores {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n\r\n.score-item {\r\n  width: 45%;\r\n  text-align: center;\r\n  background-color: #f8f8f8;\r\n  padding: 20rpx;\r\n  border-radius: 10rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.result-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 40rpx;\r\n}\r\n\r\n.btn {\r\n  width: 45%;\r\n  height: 80rpx;\r\n  line-height: 80rpx;\r\n  font-size: 28rpx;\r\n  margin: 0;\r\n}\r\n\r\n.btn.primary {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/yulidanprogram/second/EnglishCET-4andCET-6LearningSystem/pages/practice/mock-exam/mock-exam.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","uniCloud","onMounted","MiniProgramPage"],"mappings":"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"}