{"version":3,"file":"real-exam.js","sources":["pages/practice/real-exam/real-exam.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJhY3RpY2UvcmVhbC1leGFtL3JlYWwtZXhhbS52dWU"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted ,onUnmounted } from 'vue'\r\n\r\n/**\r\n * @description 考试时间（分钟）\r\n */\r\nconst EXAM_TIME = 45  // 真题练习时间更长\r\n\r\n/**\r\n * @description 考试状态\r\n */\r\nconst examStatus = ref('ready') // ready-准备开始, ongoing-考试中, finished-已结束\r\n\r\n/**\r\n * @description 剩余时间（秒）\r\n */\r\nconst remainingTime = ref(EXAM_TIME * 60)\r\n\r\n/**\r\n * @description 题目列表\r\n */\r\nconst questionList = ref([])\r\n\r\n/**\r\n * @description 当前题目索引\r\n */\r\nconst currentIndex = ref(0)\r\n\r\n/**\r\n * @description 用户答案\r\n */\r\nconst userAnswers = ref([])\r\n\r\n/**\r\n * @description 计时器\r\n */\r\nlet timer = null\r\n\r\n/**\r\n * @description 分数\r\n */\r\nconst score = ref(0)\r\n\r\n/**\r\n * @description 答对率\r\n */\r\nconst correctRate = ref(0)\r\n\r\n/**\r\n * @description 答对题数\r\n */\r\nconst correctCount = ref(0)\r\n\r\n/**\r\n * @description 是否显示解析\r\n */\r\nconst showAnalysis = ref(false)\r\n\r\n/**\r\n * @description 当前选择的类别\r\n */\r\nconst currentCategory = ref('CET4')\r\n\r\n/**\r\n * @description 类别选项\r\n */\r\nconst categoryOptions = ref([\r\n  { value: 'CET4', label: '大学英语四级' },\r\n  { value: 'CET6', label: '大学英语六级' }\r\n])\r\n\r\n/**\r\n * @description 年份列表\r\n */\r\nconst yearList = ref([])\r\n\r\n/**\r\n * @description 当前选择的年份\r\n */\r\nconst currentYear = ref('')\r\n\r\n/**\r\n * @description 当前选择的月份\r\n */\r\nconst currentMonth = ref('')\r\n\r\n/**\r\n * @description 月份列表\r\n */\r\nconst monthList = ref([])\r\n\r\n/**\r\n * @description 当前题目类型\r\n */\r\nconst currentType = ref('listening')\r\n\r\n/**\r\n * @description 题目类型选项\r\n */\r\nconst typeOptions = ref([\r\n  { value: 'listening', label: '听力' },\r\n  { value: 'reading', label: '阅读' },\r\n  { value: 'translation', label: '翻译' },\r\n  { value: 'writing', label: '写作' }\r\n])\r\n\r\n/**\r\n * @description 试卷数据\r\n */\r\nconst paperData = ref(null)\r\n\r\n/**\r\n * @description 音频播放器\r\n */\r\nconst audioContext = ref(null)\r\nconst isPlaying = ref(false)\r\n\r\n/**\r\n * @description 加载题目\r\n */\r\nconst loadQuestions = async () => {\r\n  try {\r\n    uni.showLoading({\r\n      title: '加载中...'\r\n    })\r\n    //重置所有变量\r\n    userAnswers.value = []\r\n    correctCount.value = 0\r\n    correctRate.value = 0\r\n    score.value = 0\r\n    showAnalysis.value = false\r\n    currentIndex.value = 0\r\n    remainingTime.value = EXAM_TIME * 60\r\n    isPlaying.value = false\r\n    //重置音频播放器\r\n    if (audioContext.value) { \r\n      audioContext.value.pause()\r\n      audioContext.value.destroy()\r\n      audioContext.value = null\r\n    }\r\n    \r\n    \r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getRealExamQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        type: currentType.value,\r\n        year: currentYear.value,\r\n        month: currentMonth.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      questionList.value = result.data.list\r\n      initAnswers()\r\n      showAnalysis.value = false\r\n      score.value = 0\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载题目失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 初始化答案\r\n */\r\nconst initAnswers = () => {\r\n  console.log(\"questionList\",questionList.value)\r\n  if (currentType.value === 'listening' || currentType.value === 'reading') {\r\n    userAnswers.value = new Array(questionList.value[0].answers.length).fill('')\r\n  } else {\r\n    userAnswers.value = ''\r\n  }\r\n  console.log(\"userAnswers\",userAnswers.value)\r\n}\r\n\r\n/**\r\n * @description 开始考试\r\n */\r\nconst startExam = () => {\r\n  examStatus.value = 'ongoing'\r\n  startTimer()\r\n}\r\n\r\n/**\r\n * @description 开始计时\r\n */\r\nconst startTimer = () => {\r\n  timer = setInterval(() => {\r\n    if (remainingTime.value > 0) {\r\n      remainingTime.value--\r\n    } else {\r\n      finishExam()\r\n    }\r\n  }, 1000)\r\n}\r\n\r\n/**\r\n * @description 结束考试\r\n */\r\nconst finishExam = async () => {\r\n  clearInterval(timer)\r\n  examStatus.value = 'finished'\r\n  showAnalysis.value = true\r\n  \r\n  try {\r\n    uni.showLoading({\r\n      title: '正在提交...'\r\n    })\r\n    \r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'savePracticeRecord',\r\n      data: {\r\n        practice_type: 'real',\r\n        answers: userAnswers.value.map((answer, index) => ({\r\n          questionId: questionList.value[index]._id,\r\n          answer,\r\n          isCorrect: answer === questionList.value[index].answer\r\n        })),\r\n        duration: EXAM_TIME * 60 - remainingTime.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      score.value = result.data.score\r\n    } else {\r\n      uni.showToast({\r\n        title: result.msg || '提交失败',\r\n        icon: 'none'\r\n      })\r\n    }\r\n  } catch (e) {\r\n    console.error('保存练习记录失败', e)\r\n    uni.showToast({\r\n      title: '提交失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 选择答案\r\n */\r\nconst selectAnswer = (index, answer) => {\r\n  userAnswers.value[index] = answer\r\n}\r\n\r\n/**\r\n * @description 下一题\r\n */\r\nconst nextQuestion = () => {\r\n  if (currentIndex.value < questionList.value.length - 1) {\r\n    currentIndex.value++\r\n  }\r\n}\r\n\r\n/**\r\n * @description 上一题\r\n */\r\nconst prevQuestion = () => {\r\n  if (currentIndex.value > 0) {\r\n    currentIndex.value--\r\n  }\r\n}\r\n\r\n/**\r\n * @description 格式化时间\r\n */\r\nconst formatTime = (seconds) => {\r\n  const minutes = Math.floor(seconds / 60)\r\n  const remainingSeconds = seconds % 60\r\n  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`\r\n}\r\n\r\n/**\r\n * @description 加载年份列表\r\n */\r\nconst loadYearList = async () => {\r\n  try {\r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getRealExamQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        type: currentType.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      yearList.value = result.data.years\r\n      if (yearList.value.length > 0) {\r\n        currentYear.value = yearList.value[0]\r\n        loadMonthList()\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载年份失败',\r\n      icon: 'none'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 加载月份列表\r\n */\r\nconst loadMonthList = async () => {\r\n  try {\r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getRealExamQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        type: currentType.value,\r\n        year: currentYear.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      monthList.value = result.data.months\r\n      if (monthList.value.length > 0) {\r\n        currentMonth.value = monthList.value[0]\r\n        loadQuestions()\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载月份失败',\r\n      icon: 'none'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 切换类别\r\n */\r\nconst handleCategoryChange = (category) => {\r\n  currentCategory.value = category\r\n  currentYear.value = ''\r\n  currentMonth.value = ''\r\n  paperData.value = null\r\n  loadYearList()\r\n}\r\n\r\n/**\r\n * @description 切换年份\r\n */\r\nconst handleYearChange = (year) => {\r\n  currentYear.value = year\r\n  loadMonthList()\r\n}\r\n\r\n/**\r\n * @description 切换月份\r\n */\r\nconst handleMonthChange = (month) => {\r\n  currentMonth.value = month\r\n  loadQuestions()\r\n}\r\n\r\n/**\r\n * @description 切换题目类型\r\n */\r\nconst handleTypeChange = (type) => {\r\n  currentType.value = type\r\n  loadYearList()\r\n}\r\n\r\n/**\r\n * @description 播放音频\r\n */\r\nconst playAudio = () => {\r\n  if (!questionList.value[0]?.audio_file) return\r\n  \r\n  if (!audioContext.value) {\r\n  \r\n  audioContext.value = uni.createInnerAudioContext()\r\n  audioContext.value.src = questionList.value[0].audio_file\r\n  \r\n  audioContext.value.onPlay(() => {\r\n    isPlaying.value = true\r\n  })\r\n  \r\n  audioContext.value.onEnded(() => {\r\n    isPlaying.value = false\r\n  })\r\n  \r\n  audioContext.value.onError(() => {\r\n    isPlaying.value = false\r\n    uni.showToast({\r\n      title: '音频播放失败',\r\n      icon: 'none'\r\n    })\r\n  })\r\n}\r\n\r\nif (isPlaying.value) {\r\n    \r\n    audioContext.value.pause()\r\n    isPlaying.value = false \r\n    console.log(\"暂停音频\")\r\n  } else {\r\n    \r\n    audioContext.value.play()\r\n    isPlaying.value = true\r\n    console.log(\"播放音频\")\r\n  }\r\n}\r\n\r\n/**\r\n * @description 检查英文输入\r\n */\r\nconst checkEnglishInput = (e) => {\r\n  const text = e.detail.value\r\n  if (/[^\\x00-\\xff\\s\\p{P}]/u.test(text)) {\r\n    uni.showToast({\r\n      title: '请输入英文',\r\n      icon: 'none'\r\n    })\r\n    userAnswers.value = text.replace(/[^\\x00-\\xff\\s\\p{P}]/gu, '')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 提交答案\r\n */\r\nconst submitAnswer = async () => {\r\n  if (currentType.value === 'listening' || currentType.value === 'reading') {\r\n    if (userAnswers.value.includes('')) {\r\n      uni.showToast({\r\n        title: '请完成所有题目',\r\n        icon: 'none'\r\n      })\r\n      return\r\n    }\r\n  } else if (!userAnswers.value.trim()) {\r\n    uni.showToast({\r\n      title: '请输入答案',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  \r\n  try {\r\n    uni.showLoading({\r\n      title: '提交中...'\r\n    })\r\n    console.log(\"userAnswers\",userAnswers.value)\r\n    let practiceType = ''\r\n      if(currentType.value === 'listening'){\r\n        practiceType = 'real_listening'\r\n      }else if(currentType.value === 'reading'){\r\n        practiceType = 'real_reading'\r\n      }else if(currentType.value === 'translation'){\r\n        practiceType = 'real_translation'\r\n      }else if(currentType.value === 'writing'){\r\n        practiceType = 'real_writing'\r\n      }\r\n    // 计算得分\r\n    if (currentType.value === 'listening' || currentType.value === 'reading') {\r\n      correctCount.value = questionList.value[0].answers.reduce((total, answer, index) => {\r\n        console.log(\"userAnswers.value[index]\",userAnswers.value[index])\r\n        console.log(\"answer.content\",answer.content)\r\n        return total + (userAnswers.value[index] === answer.content ? 1 : 0)\r\n      }, 0)\r\n      correctRate.value = Math.round((correctCount.value / questionList.value[0].answers.length) * 100)\r\n      score.value = Math.round(questionList.value[0].answers.reduce((total, answer, index) => {\r\n        return total + (userAnswers.value[index] === answer.content ? answer.score : 0)\r\n      }, 0) * 10) / 10\r\n      // 保存练习记录\r\n      await uniCloud.callFunction({\r\n            name: 'saveAndUpdatePracticeRecord',\r\n            data: {\r\n              userId: uni.getStorageSync('userInfo')._id,\r\n              question_id: questionList.value[0]._id,\r\n              practice_type: practiceType,\r\n              year: currentYear.value,\r\n              month: currentMonth.value,\r\n              userScore: score.value,\r\n              correctCount: correctCount.value,\r\n              correctRate: correctRate.value\r\n      }\r\n    })\r\n\r\n    } else {\r\n      // 翻译和写作使用模拟评分\r\n      score.value = Math.round((questionList.value[0].score - Math.random() * 20) * 10) / 10\r\n      // 保存练习记录\r\n    await uniCloud.callFunction({\r\n      name: 'saveAndUpdatePracticeRecord',\r\n      data: {\r\n        userId: uni.getStorageSync('userInfo')._id,\r\n        question_id: questionList.value[0]._id,\r\n        practice_type: practiceType,\r\n        year: currentYear.value,\r\n        month: currentMonth.value,\r\n        userScore: score.value\r\n      }\r\n    })\r\n    }\r\n    \r\n    \r\n    \r\n    showAnalysis.value = true\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '提交失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 重新练习\r\n */\r\nconst restartPractice = () => {\r\n  initAnswers()\r\n  showAnalysis.value = false\r\n  score.value = 0\r\n  if (currentType.value === 'listening') {\r\n    playAudio()\r\n  }\r\n}\r\n\r\nonUnmounted(() => {\r\n  if (audioContext.value) {\r\n    audioContext.value.pause()\r\n    isPlaying.value = false\r\n    console.log(\"卸载音频\")\r\n    audioContext.value.destroy()\r\n  }\r\n})  \r\n\r\nonMounted(() => {\r\n  if (!uni.getStorageSync('userInfo')) {\r\n    uni.showToast({\r\n      title: '请先登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    uni.navigateTo({\r\n      url: '/pages/login/login'\r\n    })\r\n  } else {\r\n    loadYearList()\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <view class=\"container\">\r\n    <!-- 顶部选择区域 -->\r\n    <view class=\"selector-area\">\r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">考试类型</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"item in categoryOptions\"\r\n              :key=\"item.value\"\r\n              :class=\"{ active: currentCategory === item.value }\"\r\n              @tap=\"handleCategoryChange(item.value)\"\r\n            >\r\n              {{ item.label }}\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">题目类型</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"item in typeOptions\"\r\n              :key=\"item.value\"\r\n              :class=\"{ active: currentType === item.value }\"\r\n              @tap=\"handleTypeChange(item.value)\"\r\n            >\r\n              {{ item.label }}\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">年份</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"year in yearList\"\r\n              :key=\"year\"\r\n              :class=\"{ active: currentYear === year }\"\r\n              @tap=\"handleYearChange(year)\"\r\n            >\r\n              {{ year }}\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">月份</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"month in monthList\"\r\n              :key=\"month\"\r\n              :class=\"{ active: currentMonth === month }\"\r\n              @tap=\"handleMonthChange(month)\"\r\n            >\r\n              {{ month }}月\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 题目内容区域 -->\r\n    <scroll-view class=\"question-content\" scroll-y>\r\n      <block v-if=\"questionList.length > 0\">\r\n        <!-- 听力部分 -->\r\n        <template v-if=\"currentType === 'listening'\">\r\n          <view class=\"audio-player\" @tap=\"playAudio\">\r\n            <text class=\"iconfont\">{{ isPlaying ? '暂停' : '播放' }}</text>\r\n          </view>\r\n          \r\n          <view\r\n            class=\"question-section\"\r\n            v-for=\"(section, sectionIndex) in questionList[0].question_content\"\r\n            :key=\"sectionIndex\"\r\n          >\r\n            <text class=\"section-name\">{{ section.section_name }}</text>\r\n            <text class=\"section-desc\">{{ section.description }}</text>\r\n            \r\n            <view\r\n              class=\"question-item\"\r\n              v-for=\"(question, questionIndex) in section.questions\"\r\n              :key=\"questionIndex\"\r\n            >\r\n              <text class=\"question-text\">{{ question.description1 }}</text>\r\n              <view class=\"options\">\r\n                <view class=\"option-item\" v-for=\"(option, key) in question.options\" :key=\"option.tips\"> \r\n                  <text class=\"option-number\">Question {{ option.tips }}</text>\r\n                  <view\r\n                  class=\"option-choice\"\r\n                  v-for=\"(content, key) in option.content\"\r\n                  :key=\"key\"\r\n                  :class=\"{ active: userAnswers[option.tips -1] === key }\"\r\n                  @tap=\"selectAnswer(option.tips -1, key)\"\r\n                >\r\n                  <text class=\"option-key\">{{ key }}</text>\r\n                  <text class=\"option-content\">{{ content }}</text>\r\n                </view>\r\n              </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 阅读部分 -->\r\n        <template v-if=\"currentType === 'reading'\">\r\n          <view class=\"reading-passage\">\r\n            <text class=\"passage-title\">{{ questionList[0].little_title }}</text>\r\n            <text class=\"passage-content\">{{ questionList[0].passage }}</text>\r\n          </view>\r\n          \r\n          <view\r\n            class=\"question-item\"\r\n            v-for=\"(question, index) in questionList[0].questions\"\r\n            :key=\"index\"\r\n          >\r\n          <text class=\"question-number\">Question {{ question.question_number }}</text>\r\n            <text class=\"question-text\">{{ question.question }}</text>\r\n            <view class=\"options\">\r\n              <view\r\n                class=\"option-choice\"\r\n                v-for=\"(content, key) in question.options\"\r\n                :key=\"key\"\r\n                :class=\"{ active: userAnswers[index] === key }\"\r\n                @tap=\"selectAnswer(index, key)\"\r\n              >\r\n                <text class=\"option-key\">{{ key }}</text>\r\n                <text class=\"option-content\">{{ content }}</text>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 翻译部分 -->\r\n        <template v-if=\"currentType === 'translation'\">\r\n          <view class=\"translation-content\">\r\n            <text class=\"section-title\">{{ questionList[0].little_title }}</text>\r\n            <view class=\"original-text\">\r\n              <text class=\"text-label\">原文：</text>\r\n              <text class=\"text-content\">{{ questionList[0].original_text }}</text>\r\n            </view>\r\n            \r\n            <view class=\"translation-area\">\r\n              <text class=\"text-label\">译文：</text>\r\n              <textarea\r\n                class=\"translation-input\"\r\n                v-model=\"userAnswers\"\r\n                :disabled=\"showAnalysis\"\r\n                placeholder=\"请输入英文翻译...\"\r\n                @blur=\"checkEnglishInput\"\r\n                maxlength=\"-1\"\r\n              />\r\n            </view>\r\n            \r\n            <view class=\"reference-answer\" v-if=\"showAnalysis\">\r\n              <text class=\"text-label\">参考译文：</text>\r\n              <text class=\"text-content\">{{ questionList[0].reference_translation }}</text>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 写作部分 -->\r\n        <template v-if=\"currentType === 'writing'\">\r\n          <view class=\"writing-content\">\r\n            <text class=\"section-title\">{{ questionList[0].little_title }}</text>\r\n            <text class=\"writing-title\">{{ questionList[0].title }}</text>\r\n            \r\n            <view class=\"word-limit\">\r\n              字数要求：{{ questionList[0].word_limit.min }}-{{ questionList[0].word_limit.max }}词\r\n            </view>\r\n            \r\n            <textarea\r\n              class=\"writing-input\"\r\n              v-model=\"userAnswers\"\r\n              :disabled=\"showAnalysis\"\r\n              placeholder=\"请用英文写作...\"\r\n              @blur=\"checkEnglishInput\"\r\n              maxlength=\"-1\"\r\n            />\r\n            \r\n            <view class=\"reference-answer\" v-if=\"showAnalysis\">\r\n              <text class=\"text-label\">参考范文：</text>\r\n              <text class=\"text-content\">{{ questionList[0].reference_answer }}</text>\r\n            </view>\r\n          </view>\r\n        </template>\r\n      </block>\r\n      <view v-else class=\"empty-tip\">\r\n        <text>暂无题目数据</text>\r\n      </view>\r\n    </scroll-view>\r\n    \r\n    <!-- 底部控制栏 -->\r\n    <view class=\"fixed-bottom\">\r\n      <view class=\"score-info\" v-if=\"showAnalysis\">\r\n        <text>得分：{{ score }}</text>\r\n      </view>\r\n      <view class=\"button-group\">\r\n        <button\r\n          class=\"control-btn\"\r\n          v-if=\"showAnalysis\"\r\n          @tap=\"restartPractice\"\r\n        >\r\n          重新练习\r\n        </button>\r\n        <button\r\n          class=\"control-btn primary\"\r\n          v-else\r\n          @tap=\"submitAnswer\"\r\n        >\r\n          提交答案\r\n        </button>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<style>\r\n.container {\r\n  padding: 30rpx;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.selector-area {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.selector-row {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.selector-row:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.selector-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n}\r\n.options-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20rpx;\r\n}\r\n\r\n.options {\r\n  padding-left: 20rpx;\r\n}\r\n\r\n.option {\r\n  padding: 10rpx 30rpx;\r\n  font-size: 26rpx;\r\n  color: #666;\r\n  background-color: #f8f8f8;\r\n  border-radius: 30rpx;\r\n}\r\n\r\n.option.active {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.question-content {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 120rpx;\r\n}\r\n\r\n.audio-player {\r\n  width: 100rpx;\r\n  height: 100rpx;\r\n  background-color: #4095E5;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto 30rpx;\r\n}\r\n\r\n.audio-player .iconfont {\r\n  color: #fff;\r\n  font-size: 40rpx;\r\n}\r\n\r\n.section-name {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.section-desc {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.question-item {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.question-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.option-choice {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 20rpx;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.option-choice.active {\r\n  background-color: rgba(64, 149, 229, 0.1);\r\n  border-color: #4095E5;\r\n}\r\n\r\n.option-key {\r\n  width: 60rpx;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n}\r\n\r\n.option-content {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.reading-passage {\r\n  margin-bottom: 40rpx;\r\n  padding: 30rpx;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10rpx;\r\n}\r\n\r\n.passage-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.passage-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n}\r\n\r\n.translation-content,\r\n.writing-content {\r\n  padding: 30rpx;\r\n}\r\n\r\n.section-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.text-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.text-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.translation-input,\r\n.writing-input {\r\n  width: 100%;\r\n  height: 400rpx;\r\n  padding: 20rpx;\r\n  font-size: 28rpx;\r\n  line-height: 1.8;\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.word-limit {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  margin: 20rpx 0;\r\n}\r\n\r\n.reference-answer {\r\n  margin-top: 40rpx;\r\n  padding-top: 40rpx;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.fixed-bottom {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #fff;\r\n  padding: 20rpx;\r\n  box-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.score-info {\r\n  text-align: center;\r\n  margin-bottom: 20rpx;\r\n  font-size: 32rpx;\r\n  color: #4095E5;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 20rpx;\r\n}\r\n\r\n.control-btn {\r\n  flex: 1;\r\n  height: 80rpx;\r\n  line-height: 80rpx;\r\n  font-size: 28rpx;\r\n  border-radius: 40rpx;\r\n  margin: 0;\r\n}\r\n\r\n.control-btn.primary {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.empty-tip {\r\n  text-align: center;\r\n  padding: 100rpx 0;\r\n  color: #999;\r\n  font-size: 28rpx;\r\n}\r\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/yulidanprogram/second/EnglishCET-4andCET-6LearningSystem/pages/practice/real-exam/real-exam.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","uniCloud","onUnmounted","onMounted","MiniProgramPage"],"mappings":"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"}