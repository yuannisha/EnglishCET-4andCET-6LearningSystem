{"version":3,"names":["EXAM_TIME","common_vendor","ref","remainingTime","questionList","currentIndex","userAnswers","score","correctRate","correctCount","showAnalysis","currentCategory","categoryOptions","value","label","yearList","currentYear","currentMonth","monthList","currentType","typeOptions","paperData","audioContext","isPlaying","loadQuestions","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","_yield$common_vendor$","result","wrap","_callee$","_context","prev","next","index","showLoading","title","pause","destroy","er","callFunction","name","data","category","type","year","month","sent","code","list","initAnswers","t0","__f__","showToast","icon","hideLoading","finish","stop","apply","arguments","Array","answers","length","fill","selectAnswer","answer","loadYearList","_ref2","_callee2","_yield$common_vendor$2","_callee2$","_context2","years","loadMonthList","_ref3","_callee3","_yield$common_vendor$3","_callee3$","_context3","months","handleCategoryChange","handleYearChange","handleMonthChange","handleTypeChange","playAudio","_a","audio_file","createInnerAudioContext","src","onPlay","onEnded","onError","play","checkEnglishInput","e","text","detail","test","replace","submitAnswer","_ref4","_callee4","practiceType","_callee4$","_context4","includes","abrupt","trim","reduce","total","content","Math","round","userId","getStorageSync","_id","question_id","practice_type","userScore","random","restartPractice","onUnmounted","onMounted","duration","navigateTo","url","wx","createPage","_sfc_main"],"sources":["real-exam.vue","E:/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJhY3RpY2UvcmVhbC1leGFtL3JlYWwtZXhhbS52dWU"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted ,onUnmounted } from 'vue'\r\n\r\n/**\r\n * @description 考试时间（分钟）\r\n */\r\nconst EXAM_TIME = 45  // 真题练习时间更长\r\n\r\n/**\r\n * @description 考试状态\r\n */\r\nconst examStatus = ref('ready') // ready-准备开始, ongoing-考试中, finished-已结束\r\n\r\n/**\r\n * @description 剩余时间（秒）\r\n */\r\nconst remainingTime = ref(EXAM_TIME * 60)\r\n\r\n/**\r\n * @description 题目列表\r\n */\r\nconst questionList = ref([])\r\n\r\n/**\r\n * @description 当前题目索引\r\n */\r\nconst currentIndex = ref(0)\r\n\r\n/**\r\n * @description 用户答案\r\n */\r\nconst userAnswers = ref([])\r\n\r\n/**\r\n * @description 计时器\r\n */\r\nlet timer = null\r\n\r\n/**\r\n * @description 分数\r\n */\r\nconst score = ref(0)\r\n\r\n/**\r\n * @description 答对率\r\n */\r\nconst correctRate = ref(0)\r\n\r\n/**\r\n * @description 答对题数\r\n */\r\nconst correctCount = ref(0)\r\n\r\n/**\r\n * @description 是否显示解析\r\n */\r\nconst showAnalysis = ref(false)\r\n\r\n/**\r\n * @description 当前选择的类别\r\n */\r\nconst currentCategory = ref('CET4')\r\n\r\n/**\r\n * @description 类别选项\r\n */\r\nconst categoryOptions = ref([\r\n  { value: 'CET4', label: '大学英语四级' },\r\n  { value: 'CET6', label: '大学英语六级' }\r\n])\r\n\r\n/**\r\n * @description 年份列表\r\n */\r\nconst yearList = ref([])\r\n\r\n/**\r\n * @description 当前选择的年份\r\n */\r\nconst currentYear = ref('')\r\n\r\n/**\r\n * @description 当前选择的月份\r\n */\r\nconst currentMonth = ref('')\r\n\r\n/**\r\n * @description 月份列表\r\n */\r\nconst monthList = ref([])\r\n\r\n/**\r\n * @description 当前题目类型\r\n */\r\nconst currentType = ref('listening')\r\n\r\n/**\r\n * @description 题目类型选项\r\n */\r\nconst typeOptions = ref([\r\n  { value: 'listening', label: '听力' },\r\n  { value: 'reading', label: '阅读' },\r\n  { value: 'translation', label: '翻译' },\r\n  { value: 'writing', label: '写作' }\r\n])\r\n\r\n/**\r\n * @description 试卷数据\r\n */\r\nconst paperData = ref(null)\r\n\r\n/**\r\n * @description 音频播放器\r\n */\r\nconst audioContext = ref(null)\r\nconst isPlaying = ref(false)\r\n\r\n/**\r\n * @description 加载题目\r\n */\r\nconst loadQuestions = async () => {\r\n  try {\r\n    uni.showLoading({\r\n      title: '加载中...'\r\n    })\r\n    //重置所有变量\r\n    userAnswers.value = []\r\n    correctCount.value = 0\r\n    correctRate.value = 0\r\n    score.value = 0\r\n    showAnalysis.value = false\r\n    currentIndex.value = 0\r\n    remainingTime.value = EXAM_TIME * 60\r\n    isPlaying.value = false\r\n    //重置音频播放器\r\n    if (audioContext.value) { \r\n      audioContext.value.pause()\r\n      audioContext.value.destroy()\r\n      audioContext.value = null\r\n    }\r\n    \r\n    \r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getRealExamQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        type: currentType.value,\r\n        year: currentYear.value,\r\n        month: currentMonth.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      questionList.value = result.data.list\r\n      initAnswers()\r\n      showAnalysis.value = false\r\n      score.value = 0\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载题目失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 初始化答案\r\n */\r\nconst initAnswers = () => {\r\n  console.log(\"questionList\",questionList.value)\r\n  if (currentType.value === 'listening' || currentType.value === 'reading') {\r\n    userAnswers.value = new Array(questionList.value[0].answers.length).fill('')\r\n  } else {\r\n    userAnswers.value = ''\r\n  }\r\n  console.log(\"userAnswers\",userAnswers.value)\r\n}\r\n\r\n/**\r\n * @description 开始考试\r\n */\r\nconst startExam = () => {\r\n  examStatus.value = 'ongoing'\r\n  startTimer()\r\n}\r\n\r\n/**\r\n * @description 开始计时\r\n */\r\nconst startTimer = () => {\r\n  timer = setInterval(() => {\r\n    if (remainingTime.value > 0) {\r\n      remainingTime.value--\r\n    } else {\r\n      finishExam()\r\n    }\r\n  }, 1000)\r\n}\r\n\r\n/**\r\n * @description 结束考试\r\n */\r\nconst finishExam = async () => {\r\n  clearInterval(timer)\r\n  examStatus.value = 'finished'\r\n  showAnalysis.value = true\r\n  \r\n  try {\r\n    uni.showLoading({\r\n      title: '正在提交...'\r\n    })\r\n    \r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'savePracticeRecord',\r\n      data: {\r\n        practice_type: 'real',\r\n        answers: userAnswers.value.map((answer, index) => ({\r\n          questionId: questionList.value[index]._id,\r\n          answer,\r\n          isCorrect: answer === questionList.value[index].answer\r\n        })),\r\n        duration: EXAM_TIME * 60 - remainingTime.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      score.value = result.data.score\r\n    } else {\r\n      uni.showToast({\r\n        title: result.msg || '提交失败',\r\n        icon: 'none'\r\n      })\r\n    }\r\n  } catch (e) {\r\n    console.error('保存练习记录失败', e)\r\n    uni.showToast({\r\n      title: '提交失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 选择答案\r\n */\r\nconst selectAnswer = (index, answer) => {\r\n  userAnswers.value[index] = answer\r\n}\r\n\r\n/**\r\n * @description 下一题\r\n */\r\nconst nextQuestion = () => {\r\n  if (currentIndex.value < questionList.value.length - 1) {\r\n    currentIndex.value++\r\n  }\r\n}\r\n\r\n/**\r\n * @description 上一题\r\n */\r\nconst prevQuestion = () => {\r\n  if (currentIndex.value > 0) {\r\n    currentIndex.value--\r\n  }\r\n}\r\n\r\n/**\r\n * @description 格式化时间\r\n */\r\nconst formatTime = (seconds) => {\r\n  const minutes = Math.floor(seconds / 60)\r\n  const remainingSeconds = seconds % 60\r\n  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`\r\n}\r\n\r\n/**\r\n * @description 加载年份列表\r\n */\r\nconst loadYearList = async () => {\r\n  try {\r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getRealExamQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        type: currentType.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      yearList.value = result.data.years\r\n      if (yearList.value.length > 0) {\r\n        currentYear.value = yearList.value[0]\r\n        loadMonthList()\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载年份失败',\r\n      icon: 'none'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 加载月份列表\r\n */\r\nconst loadMonthList = async () => {\r\n  try {\r\n    const { result } = await uniCloud.callFunction({\r\n      name: 'getRealExamQuestions',\r\n      data: {\r\n        category: currentCategory.value,\r\n        type: currentType.value,\r\n        year: currentYear.value\r\n      }\r\n    })\r\n    \r\n    if (result.code === 0) {\r\n      monthList.value = result.data.months\r\n      if (monthList.value.length > 0) {\r\n        currentMonth.value = monthList.value[0]\r\n        loadQuestions()\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '加载月份失败',\r\n      icon: 'none'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description 切换类别\r\n */\r\nconst handleCategoryChange = (category) => {\r\n  currentCategory.value = category\r\n  currentYear.value = ''\r\n  currentMonth.value = ''\r\n  paperData.value = null\r\n  loadYearList()\r\n}\r\n\r\n/**\r\n * @description 切换年份\r\n */\r\nconst handleYearChange = (year) => {\r\n  currentYear.value = year\r\n  loadMonthList()\r\n}\r\n\r\n/**\r\n * @description 切换月份\r\n */\r\nconst handleMonthChange = (month) => {\r\n  currentMonth.value = month\r\n  loadQuestions()\r\n}\r\n\r\n/**\r\n * @description 切换题目类型\r\n */\r\nconst handleTypeChange = (type) => {\r\n  currentType.value = type\r\n  loadYearList()\r\n}\r\n\r\n/**\r\n * @description 播放音频\r\n */\r\nconst playAudio = () => {\r\n  if (!questionList.value[0]?.audio_file) return\r\n  \r\n  if (!audioContext.value) {\r\n  \r\n  audioContext.value = uni.createInnerAudioContext()\r\n  audioContext.value.src = questionList.value[0].audio_file\r\n  \r\n  audioContext.value.onPlay(() => {\r\n    isPlaying.value = true\r\n  })\r\n  \r\n  audioContext.value.onEnded(() => {\r\n    isPlaying.value = false\r\n  })\r\n  \r\n  audioContext.value.onError(() => {\r\n    isPlaying.value = false\r\n    uni.showToast({\r\n      title: '音频播放失败',\r\n      icon: 'none'\r\n    })\r\n  })\r\n}\r\n\r\nif (isPlaying.value) {\r\n    \r\n    audioContext.value.pause()\r\n    isPlaying.value = false \r\n    console.log(\"暂停音频\")\r\n  } else {\r\n    \r\n    audioContext.value.play()\r\n    isPlaying.value = true\r\n    console.log(\"播放音频\")\r\n  }\r\n}\r\n\r\n/**\r\n * @description 检查英文输入\r\n */\r\nconst checkEnglishInput = (e) => {\r\n  const text = e.detail.value\r\n  if (/[^\\x00-\\xff\\s\\p{P}]/u.test(text)) {\r\n    uni.showToast({\r\n      title: '请输入英文',\r\n      icon: 'none'\r\n    })\r\n    userAnswers.value = text.replace(/[^\\x00-\\xff\\s\\p{P}]/gu, '')\r\n  }\r\n}\r\n\r\n/**\r\n * @description 提交答案\r\n */\r\nconst submitAnswer = async () => {\r\n  if (currentType.value === 'listening' || currentType.value === 'reading') {\r\n    if (userAnswers.value.includes('')) {\r\n      uni.showToast({\r\n        title: '请完成所有题目',\r\n        icon: 'none'\r\n      })\r\n      return\r\n    }\r\n  } else if (!userAnswers.value.trim()) {\r\n    uni.showToast({\r\n      title: '请输入答案',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  \r\n  try {\r\n    uni.showLoading({\r\n      title: '提交中...'\r\n    })\r\n    console.log(\"userAnswers\",userAnswers.value)\r\n    // 计算得分\r\n    if (currentType.value === 'listening' || currentType.value === 'reading') {\r\n      correctCount.value = questionList.value[0].answers.reduce((total, answer, index) => {\r\n        console.log(\"userAnswers.value[index]\",userAnswers.value[index])\r\n        console.log(\"answer.content\",answer.content)\r\n        return total + (userAnswers.value[index] === answer.content ? 1 : 0)\r\n      }, 0)\r\n      correctRate.value = Math.round((correctCount.value / questionList.value[0].answers.length) * 100)\r\n      score.value = Math.round(questionList.value[0].answers.reduce((total, answer, index) => {\r\n        return total + (userAnswers.value[index] === answer.content ? answer.score : 0)\r\n      }, 0) * 10) / 10\r\n      let practiceType = ''\r\n      if(currentType.value === 'listening'){\r\n        practiceType = 'real_listening'\r\n      }else if(currentType.value === 'reading'){\r\n        practiceType = 'real_reading'\r\n      }else if(currentType.value === 'translation'){\r\n        practiceType = 'real_translation'\r\n      }else if(currentType.value === 'writing'){\r\n        practiceType = 'real_writing'\r\n      }\r\n      // 保存练习记录\r\n      await uniCloud.callFunction({\r\n            name: 'saveAndUpdatePracticeRecord',\r\n            data: {\r\n              userId: uni.getStorageSync('userInfo')._id,\r\n              question_id: questionList.value[0]._id,\r\n              practice_type: practiceType,\r\n              year: currentYear.value,\r\n              month: currentMonth.value,\r\n              userScore: score.value,\r\n              correctCount: correctCount.value,\r\n              correctRate: correctRate.value\r\n      }\r\n    })\r\n\r\n    } else {\r\n      // 翻译和写作使用模拟评分\r\n      score.value = Math.round((questionList.value[0].score - Math.random() * 20) * 10) / 10\r\n      // 保存练习记录\r\n    await uniCloud.callFunction({\r\n      name: 'saveAndUpdatePracticeRecord',\r\n      data: {\r\n        userId: uni.getStorageSync('userInfo')._id,\r\n        question_id: questionList.value[0]._id,\r\n        practice_type: 'real_translationOrWriting',\r\n        year: currentYear.value,\r\n        month: currentMonth.value,\r\n        userScore: score.value\r\n      }\r\n    })\r\n    }\r\n    \r\n    \r\n    \r\n    showAnalysis.value = true\r\n  } catch (e) {\r\n    console.error(e)\r\n    uni.showToast({\r\n      title: '提交失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    uni.hideLoading()\r\n  }\r\n}\r\n\r\n/**\r\n * @description 重新练习\r\n */\r\nconst restartPractice = () => {\r\n  initAnswers()\r\n  showAnalysis.value = false\r\n  score.value = 0\r\n  if (currentType.value === 'listening') {\r\n    playAudio()\r\n  }\r\n}\r\n\r\nonUnmounted(() => {\r\n  if (audioContext.value) {\r\n    audioContext.value.pause()\r\n    isPlaying.value = false\r\n    console.log(\"卸载音频\")\r\n    audioContext.value.destroy()\r\n  }\r\n})  \r\n\r\nonMounted(() => {\r\n  if (!uni.getStorageSync('userInfo')) {\r\n    uni.showToast({\r\n      title: '请先登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    uni.navigateTo({\r\n      url: '/pages/login/login'\r\n    })\r\n  } else {\r\n    loadYearList()\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <view class=\"container\">\r\n    <!-- 顶部选择区域 -->\r\n    <view class=\"selector-area\">\r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">考试类型</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"item in categoryOptions\"\r\n              :key=\"item.value\"\r\n              :class=\"{ active: currentCategory === item.value }\"\r\n              @tap=\"handleCategoryChange(item.value)\"\r\n            >\r\n              {{ item.label }}\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">题目类型</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"item in typeOptions\"\r\n              :key=\"item.value\"\r\n              :class=\"{ active: currentType === item.value }\"\r\n              @tap=\"handleTypeChange(item.value)\"\r\n            >\r\n              {{ item.label }}\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">年份</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"year in yearList\"\r\n              :key=\"year\"\r\n              :class=\"{ active: currentYear === year }\"\r\n              @tap=\"handleYearChange(year)\"\r\n            >\r\n              {{ year }}\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      \r\n      <view class=\"selector-row\">\r\n        <view class=\"selector-item\">\r\n          <text class=\"label\">月份</text>\r\n          <view class=\"options-list\">\r\n            <view\r\n              class=\"option\"\r\n              v-for=\"month in monthList\"\r\n              :key=\"month\"\r\n              :class=\"{ active: currentMonth === month }\"\r\n              @tap=\"handleMonthChange(month)\"\r\n            >\r\n              {{ month }}月\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 题目内容区域 -->\r\n    <scroll-view class=\"question-content\" scroll-y>\r\n      <block v-if=\"questionList.length > 0\">\r\n        <!-- 听力部分 -->\r\n        <template v-if=\"currentType === 'listening'\">\r\n          <view class=\"audio-player\" @tap=\"playAudio\">\r\n            <text class=\"iconfont\">{{ isPlaying ? '暂停' : '播放' }}</text>\r\n          </view>\r\n          \r\n          <view\r\n            class=\"question-section\"\r\n            v-for=\"(section, sectionIndex) in questionList[0].question_content\"\r\n            :key=\"sectionIndex\"\r\n          >\r\n            <text class=\"section-name\">{{ section.section_name }}</text>\r\n            <text class=\"section-desc\">{{ section.description }}</text>\r\n            \r\n            <view\r\n              class=\"question-item\"\r\n              v-for=\"(question, questionIndex) in section.questions\"\r\n              :key=\"questionIndex\"\r\n            >\r\n              <text class=\"question-text\">{{ question.description1 }}</text>\r\n              <view class=\"options\">\r\n                <view class=\"option-item\" v-for=\"(option, key) in question.options\" :key=\"option.tips\"> \r\n                  <text class=\"option-number\">Question {{ option.tips }}</text>\r\n                  <view\r\n                  class=\"option-choice\"\r\n                  v-for=\"(content, key) in option.content\"\r\n                  :key=\"key\"\r\n                  :class=\"{ active: userAnswers[option.tips -1] === key }\"\r\n                  @tap=\"selectAnswer(option.tips -1, key)\"\r\n                >\r\n                  <text class=\"option-key\">{{ key }}</text>\r\n                  <text class=\"option-content\">{{ content }}</text>\r\n                </view>\r\n              </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 阅读部分 -->\r\n        <template v-if=\"currentType === 'reading'\">\r\n          <view class=\"reading-passage\">\r\n            <text class=\"passage-title\">{{ questionList[0].little_title }}</text>\r\n            <text class=\"passage-content\">{{ questionList[0].passage }}</text>\r\n          </view>\r\n          \r\n          <view\r\n            class=\"question-item\"\r\n            v-for=\"(question, index) in questionList[0].questions\"\r\n            :key=\"index\"\r\n          >\r\n          <text class=\"question-number\">Question {{ question.question_number }}</text>\r\n            <text class=\"question-text\">{{ question.question }}</text>\r\n            <view class=\"options\">\r\n              <view\r\n                class=\"option-choice\"\r\n                v-for=\"(content, key) in question.options\"\r\n                :key=\"key\"\r\n                :class=\"{ active: userAnswers[index] === key }\"\r\n                @tap=\"selectAnswer(index, key)\"\r\n              >\r\n                <text class=\"option-key\">{{ key }}</text>\r\n                <text class=\"option-content\">{{ content }}</text>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 翻译部分 -->\r\n        <template v-if=\"currentType === 'translation'\">\r\n          <view class=\"translation-content\">\r\n            <text class=\"section-title\">{{ questionList[0].little_title }}</text>\r\n            <view class=\"original-text\">\r\n              <text class=\"text-label\">原文：</text>\r\n              <text class=\"text-content\">{{ questionList[0].original_text }}</text>\r\n            </view>\r\n            \r\n            <view class=\"translation-area\">\r\n              <text class=\"text-label\">译文：</text>\r\n              <textarea\r\n                class=\"translation-input\"\r\n                v-model=\"userAnswers\"\r\n                :disabled=\"showAnalysis\"\r\n                placeholder=\"请输入英文翻译...\"\r\n                @blur=\"checkEnglishInput\"\r\n                maxlength=\"-1\"\r\n              />\r\n            </view>\r\n            \r\n            <view class=\"reference-answer\" v-if=\"showAnalysis\">\r\n              <text class=\"text-label\">参考译文：</text>\r\n              <text class=\"text-content\">{{ questionList[0].reference_translation }}</text>\r\n            </view>\r\n          </view>\r\n        </template>\r\n        \r\n        <!-- 写作部分 -->\r\n        <template v-if=\"currentType === 'writing'\">\r\n          <view class=\"writing-content\">\r\n            <text class=\"section-title\">{{ questionList[0].little_title }}</text>\r\n            <text class=\"writing-title\">{{ questionList[0].title }}</text>\r\n            \r\n            <view class=\"word-limit\">\r\n              字数要求：{{ questionList[0].word_limit.min }}-{{ questionList[0].word_limit.max }}词\r\n            </view>\r\n            \r\n            <textarea\r\n              class=\"writing-input\"\r\n              v-model=\"userAnswers\"\r\n              :disabled=\"showAnalysis\"\r\n              placeholder=\"请用英文写作...\"\r\n              @blur=\"checkEnglishInput\"\r\n              maxlength=\"-1\"\r\n            />\r\n            \r\n            <view class=\"reference-answer\" v-if=\"showAnalysis\">\r\n              <text class=\"text-label\">参考范文：</text>\r\n              <text class=\"text-content\">{{ questionList[0].reference_answer }}</text>\r\n            </view>\r\n          </view>\r\n        </template>\r\n      </block>\r\n      <view v-else class=\"empty-tip\">\r\n        <text>暂无题目数据</text>\r\n      </view>\r\n    </scroll-view>\r\n    \r\n    <!-- 底部控制栏 -->\r\n    <view class=\"fixed-bottom\">\r\n      <view class=\"score-info\" v-if=\"showAnalysis\">\r\n        <text>得分：{{ score }}</text>\r\n      </view>\r\n      <view class=\"button-group\">\r\n        <button\r\n          class=\"control-btn\"\r\n          v-if=\"showAnalysis\"\r\n          @tap=\"restartPractice\"\r\n        >\r\n          重新练习\r\n        </button>\r\n        <button\r\n          class=\"control-btn primary\"\r\n          v-else\r\n          @tap=\"submitAnswer\"\r\n        >\r\n          提交答案\r\n        </button>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<style>\r\n.container {\r\n  padding: 30rpx;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.selector-area {\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.selector-row {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.selector-row:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.selector-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n}\r\n.options-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20rpx;\r\n}\r\n\r\n.options {\r\n  padding-left: 20rpx;\r\n}\r\n\r\n.option {\r\n  padding: 10rpx 30rpx;\r\n  font-size: 26rpx;\r\n  color: #666;\r\n  background-color: #f8f8f8;\r\n  border-radius: 30rpx;\r\n}\r\n\r\n.option.active {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.question-content {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 20rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 120rpx;\r\n}\r\n\r\n.audio-player {\r\n  width: 100rpx;\r\n  height: 100rpx;\r\n  background-color: #4095E5;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto 30rpx;\r\n}\r\n\r\n.audio-player .iconfont {\r\n  color: #fff;\r\n  font-size: 40rpx;\r\n}\r\n\r\n.section-name {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.section-desc {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.question-item {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.question-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.option-choice {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 20rpx;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.option-choice.active {\r\n  background-color: rgba(64, 149, 229, 0.1);\r\n  border-color: #4095E5;\r\n}\r\n\r\n.option-key {\r\n  width: 60rpx;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n}\r\n\r\n.option-content {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.reading-passage {\r\n  margin-bottom: 40rpx;\r\n  padding: 30rpx;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10rpx;\r\n}\r\n\r\n.passage-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.passage-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n}\r\n\r\n.translation-content,\r\n.writing-content {\r\n  padding: 30rpx;\r\n}\r\n\r\n.section-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.text-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.text-content {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  line-height: 1.8;\r\n  margin-bottom: 30rpx;\r\n  display: block;\r\n}\r\n\r\n.translation-input,\r\n.writing-input {\r\n  width: 100%;\r\n  height: 400rpx;\r\n  padding: 20rpx;\r\n  font-size: 28rpx;\r\n  line-height: 1.8;\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #eee;\r\n  border-radius: 10rpx;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.word-limit {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  margin: 20rpx 0;\r\n}\r\n\r\n.reference-answer {\r\n  margin-top: 40rpx;\r\n  padding-top: 40rpx;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.fixed-bottom {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #fff;\r\n  padding: 20rpx;\r\n  box-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.score-info {\r\n  text-align: center;\r\n  margin-bottom: 20rpx;\r\n  font-size: 32rpx;\r\n  color: #4095E5;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 20rpx;\r\n}\r\n\r\n.control-btn {\r\n  flex: 1;\r\n  height: 80rpx;\r\n  line-height: 80rpx;\r\n  font-size: 28rpx;\r\n  border-radius: 40rpx;\r\n  margin: 0;\r\n}\r\n\r\n.control-btn.primary {\r\n  background-color: #4095E5;\r\n  color: #fff;\r\n}\r\n\r\n.empty-tip {\r\n  text-align: center;\r\n  padding: 100rpx 0;\r\n  color: #999;\r\n  font-size: 28rpx;\r\n}\r\n</style> ","import MiniProgramPage from 'D:/programs2024to2025/yulidanprogram/second/EnglishCET-4andCET-6LearningSystem/pages/practice/real-exam/real-exam.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}